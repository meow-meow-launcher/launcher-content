function i(N,n=Number.NEGATIVE_INFINITY,r=Number.POSITIVE_INFINITY){return Math.min(r,Math.max(n,N))}function u(N,n){let r=N;const o=n.toString(),t=o.indexOf("."),e=t>=0?o.length-t:0;if(e>0){const a=10**e;r=Math.round(r*a)/a}return r}function c(N,n,r,o){n=Number(n),r=Number(r);const t=(N-(Number.isNaN(n)?0:n))%o;let e=u(Math.abs(t)*2>=o?N+Math.sign(t)*(o-Math.abs(t)):N-t,o);return Number.isNaN(n)?!Number.isNaN(r)&&e>r&&(e=Math.floor(u(r/o,o))*o):e<n?e=n:!Number.isNaN(r)&&e>r&&(e=n+Math.floor(u((r-n)/o,o))*o),e=u(e,o),e}export{i as c,c as s};
